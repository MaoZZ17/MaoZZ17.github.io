(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{354:function(e,v,_){e.exports=_.p+"assets/img/async&defer.1bb7be75.png"},410:function(e,v,_){"use strict";_.r(v);var t=_(42),o=Object(t.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[e._v("#")]),e._v(" HTML")]),e._v(" "),t("h2",{attrs:{id:"元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元素"}},[e._v("#")]),e._v(" 元素")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("参考")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN HTML 元素参考"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"meta"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#meta"}},[e._v("#")]),e._v(" meta")]),e._v(" "),t("p",[e._v("HTML "),t("code",[e._v("<meta>")]),e._v(" 元素表示那些不能由其它HTML元相关元素 ("),t("code",[e._v("<base>")]),e._v(", "),t("code",[e._v("<link>")]),e._v(", "),t("code",[e._v("<script>")]),e._v(", "),t("code",[e._v("<style>")]),e._v(" 或 "),t("code",[e._v("<title>")]),e._v(") 之一表示的任何元数据信息.")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("meta")]),e._v(" 元素定义的元数据的类型包括以下几种：\n"),t("ul",[t("li",[e._v("如果设置了 "),t("code",[e._v("name")]),e._v(" 属性，"),t("code",[e._v("meta")]),e._v(" 元素提供的是文档级别（document-level）的元数据，应用于整个页面。")]),e._v(" "),t("li",[e._v("如果设置了 "),t("code",[e._v("http-equiv")]),e._v(" 属性，"),t("code",[e._v("meta")]),e._v(" 元素则是编译指令，提供的信息与类似命名的HTTP头部相同。")]),e._v(" "),t("li",[e._v("如果设置了 "),t("code",[e._v("charset")]),e._v(" 属性，"),t("code",[e._v("meta")]),e._v(" 元素是一个字符集声明，告诉文档使用哪种字符编码。")]),e._v(" "),t("li",[e._v("如果设置了 "),t("code",[e._v("itemprop")]),e._v(" 属性，"),t("code",[e._v("meta")]),e._v(" 元素提供用户定义的元数据。")])])]),e._v(" "),t("li",[t("code",[e._v("charset")]),e._v(" "),t("ul",[t("li",[e._v('这个属性声明了文档的字符编码。如果使用了这个属性，其值必须是与ASCII大小写无关的"'),t("code",[e._v("utf-8")]),e._v('"。')])])]),e._v(" "),t("li",[t("code",[e._v("content")]),e._v(" "),t("ul",[t("li",[e._v("此属性包含"),t("code",[e._v("http-equiv")]),e._v(" 或"),t("code",[e._v("name")]),e._v(" 属性的值，具体取决于所使用的值。")])])]),e._v(" "),t("li",[t("code",[e._v("http-equiv")]),e._v(" "),t("ul",[t("li",[e._v("属性定义了一个编译指示指令。这个属性叫做 "),t("code",[e._v("http-equiv(alent)")]),e._v(" 是因为所有允许的值都是特定HTTP头部的名称，如下：\n"),t("ul",[t("li",[t("code",[e._v("content-security-policy")]),e._v(" "),t("ul",[t("li",[e._v("它允许页面作者定义当前页的内容策略。 内容策略主要指定允许的服务器源和脚本端点，这有助于防止跨站点脚本攻击(XSS)。")])])]),e._v(" "),t("li",[t("code",[e._v("content-type")]),e._v(" "),t("ul",[t("li",[e._v('如果使用这个属性，其值必须是"'),t("code",[e._v("text/html; charset=utf-8")]),e._v('"。')])])]),e._v(" "),t("li",[t("code",[e._v("default-style")]),e._v(" "),t("ul",[t("li",[e._v("设置默认CSS样式表组的名称。")])])]),e._v(" "),t("li",[t("code",[e._v("x-ua-compatible")]),e._v(" "),t("ul",[t("li",[e._v("如果指定，则"),t("code",[e._v("content")]),e._v('属性必须具有值"'),t("code",[e._v("IE = edge")]),e._v('"。 用户代理必须忽略此编译指示。')])])]),e._v(" "),t("li",[t("code",[e._v("refresh")]),e._v(" "),t("ul",[t("li",[e._v("这个属性指定:\n"),t("ul",[t("li",[e._v("如果 "),t("code",[e._v("content")]),e._v(" 只包含一个正整数,则是重新载入页面的时间间隔(秒);")]),e._v(" "),t("li",[e._v("如果 "),t("code",[e._v("content")]),e._v(" 包含一个正整数并且跟着一个字符串 '"),t("code",[e._v(";url=")]),e._v("' 和一个合法的 URL，则是重定向到指定链接的时间间隔(秒)")])])])])])])])])]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(" 和 "),t("code",[e._v("content")]),e._v(" 属性可以一起使用，以名-值对的方式给文档提供元数据，其中 "),t("code",[e._v("name")]),e._v(" 作为元数据的名称，"),t("code",[e._v("content")]),e._v(" 作为元数据的值。")]),e._v(" "),t("li",[e._v("此元数据名称与"),t("code",[e._v("content")]),e._v("属性包含的值相关联。"),t("code",[e._v("name")]),e._v("属性的可能值为：\n"),t("ul",[t("li",[t("code",[e._v("application-name")]),e._v(", 定义正运行在该网页上的网络应用名称；")]),e._v(" "),t("li",[t("code",[e._v("author")]),e._v("，就是这个文档的作者名称，可以用自由的格式去定义；")]),e._v(" "),t("li",[t("code",[e._v("description")]),e._v("，其中包含页面内容的简短和精确的描述。 一些浏览器，如Firefox和Opera，将其用作书签页面的默认描述。")]),e._v(" "),t("li",[t("code",[e._v("generator")]),e._v(", 包含生成页面的软件的标识符。")]),e._v(" "),t("li",[t("code",[e._v("keywords")]),e._v(", 包含与逗号分隔的页面内容相关的单词。")]),e._v(" "),t("li",[t("code",[e._v("referrer")]),e._v(" 控制所有从该文档发出的 HTTP 请求中HTTP Referer 首部的内容：\n"),t("ul",[t("li",[t("code",[e._v('<meta name="referrer">')]),e._v(" "),t("code",[e._v("content")]),e._v(" 属性可取的值：\n"),t("ul",[t("li",[t("code",[e._v("no-referrer")]),e._v(": \t不要发送 HTTP Referer 首部。")]),e._v(" "),t("li",[t("code",[e._v("origin")]),e._v(": \t发送当前文档的 origin。")]),e._v(" "),t("li",[t("code",[e._v("no-referrer-when-downgrade")]),e._v(": \t当目的地是先验安全的(https->https)则发送 origin 作为 referrer ，但是当目的地是较不安全的 (https->http)时则不发送 referrer 。这个是默认的行为。")]),e._v(" "),t("li",[t("code",[e._v("origin-when-crossorigin")]),e._v(": \t在同源请求下，发送完整的URL (不含查询参数) ，其他情况下则仅发送当前文档的 origin。")]),e._v(" "),t("li",[t("code",[e._v("unsafe-URL")]),e._v(": \t在同源请求下，发送完整的URL (不含查询参数)。")])])])])]),e._v(" "),t("li",[t("code",[e._v("viewport")]),e._v(", 它提供有关视口初始大小的提示，仅供移动设备使用。\n"),t("ul",[t("li",[t("code",[e._v('<meta name="viewport">``content')]),e._v(" 属性可取的值（用"),t("code",[e._v("，")]),e._v("间隔）：")])])])])])])])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Value")]),e._v(" "),t("th",[e._v("可能值")]),e._v(" "),t("th",[e._v("描述")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("width")])]),e._v(" "),t("td",[e._v("一个正整数或者字符串 "),t("code",[e._v("device-width")])]),e._v(" "),t("td",[e._v("以pixels（像素）为单位， 定义viewport（视口）的宽度。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("height")])]),e._v(" "),t("td",[e._v("一个正整数或者字符串 "),t("code",[e._v("device-height")])]),e._v(" "),t("td",[e._v("以pixels（像素）为单位， 定义viewport（视口）的高度。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("initial-scale")])]),e._v(" "),t("td",[e._v("一个"),t("code",[e._v("0.0")]),e._v(" 到"),t("code",[e._v("10.0")]),e._v("之间的正数")]),e._v(" "),t("td",[e._v("定义设备宽度（纵向模式下的设备宽度或横向模式下的设备高度）与视口大小之间的缩放比率。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("maximum-scale")])]),e._v(" "),t("td",[e._v("一个"),t("code",[e._v("0.0")]),e._v(" 到"),t("code",[e._v("10.0")]),e._v("之间的正数")]),e._v(" "),t("td",[e._v("定义缩放的最大值；它必须大于或等于"),t("code",[e._v("minimum-scale")]),e._v("的值，不然会导致不确定的行为发生。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("minimum-scale")])]),e._v(" "),t("td",[e._v("一个"),t("code",[e._v("0.0")]),e._v(" 到"),t("code",[e._v("10.0")]),e._v("之间的正数")]),e._v(" "),t("td",[e._v("定义缩放的最小值；它必须小于或等于"),t("code",[e._v("maximum-scale")]),e._v("的值，不然会导致不确定的行为发生。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("user-scalable")])]),e._v(" "),t("td",[e._v("一个布尔值（"),t("code",[e._v("yes")]),e._v(" 或者"),t("code",[e._v("no")]),e._v("）")]),e._v(" "),t("td",[e._v("如果设置为 "),t("code",[e._v("no")]),e._v("，用户将不能放大或缩小网页。默认值为 "),t("code",[e._v("yes")]),e._v("。")])])])]),e._v(" "),t("h3",{attrs:{id:"内联元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内联元素"}},[e._v("#")]),e._v(" 内联元素")]),e._v(" "),t("h2",{attrs:{id:"浏览器渲染页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染页面"}},[e._v("#")]),e._v(" 浏览器渲染页面")]),e._v(" "),t("h3",{attrs:{id:"渲染流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#渲染流程"}},[e._v("#")]),e._v(" 渲染流程")]),e._v(" "),t("ol",[t("li",[e._v("根据"),t("code",[e._v("html")]),e._v("文件构建"),t("code",[e._v("DOM")]),e._v("树和"),t("code",[e._v("CSSOM")]),e._v("树。")]),e._v(" "),t("li",[e._v("构建"),t("code",[e._v("DOM")]),e._v("树期间，如果遇到"),t("code",[e._v("JS")]),e._v("，阻塞"),t("code",[e._v("DOM")]),e._v("树及"),t("code",[e._v("CSSOM")]),e._v("树的构建，优先加载"),t("code",[e._v("JS")]),e._v("文件，加载完毕，再继续构建"),t("code",[e._v("DOM")]),e._v("树及"),t("code",[e._v("CSSOM")]),e._v("树。\n"),t("ul",[t("li",[e._v("JS会对DOM节点进行操作，浏览器无法预测未来的DOM节点的具体内容，为了防止无效操作，节省资源，只能阻塞DOM树的构建。")])])]),e._v(" "),t("li",[e._v("构建渲染树（"),t("code",[e._v("Render Tree")]),e._v("）。")]),e._v(" "),t("li",[e._v("页面的"),t("a",{attrs:{href:"#%E5%9B%9E%E6%B5%81%E4%B8%8E%E9%87%8D%E7%BB%98"}},[e._v("回流与重绘")])])]),e._v(" "),t("h3",{attrs:{id:"回流与重绘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回流与重绘"}},[e._v("#")]),e._v(" 回流与重绘")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("参考")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.im/post/5a9923e9518825558251c96a",target:"_blank",rel:"noopener noreferrer"}},[e._v("浏览器的回流与重绘（Reflow & Repaint）"),t("OutboundLink")],1)])]),e._v(" "),t("ul",[t("li",[e._v("浏览器使用流式布局模型 (Flow Based Layout)。")]),e._v(" "),t("li",[e._v("浏览器会把"),t("code",[e._v("HTML")]),e._v("解析成"),t("code",[e._v("DOM")]),e._v("，把"),t("code",[e._v("CSS")]),e._v("解析成"),t("code",[e._v("CSSOM")]),e._v("，"),t("code",[e._v("DOM")]),e._v("和"),t("code",[e._v("CSSOM")]),e._v("合并就产生了"),t("code",[e._v("Render Tree")]),e._v("。")]),e._v(" "),t("li",[e._v("有了"),t("code",[e._v("RenderTree")]),e._v("，我们就知道了所有节点的样式，然后计算他们在页面上的大小和位置，最后把节点绘制到页面上。")]),e._v(" "),t("li",[e._v("由于浏览器使用流式布局，对"),t("code",[e._v("Render Tree")]),e._v("的计算通常只需要遍历一次就可以完成，但"),t("code",[e._v("table")]),e._v("及其内部元素除外，他们可能需要多次计算，通常要花3倍于同等元素的时间，这也是为什么要避免使用"),t("code",[e._v("table")]),e._v("布局的原因之一。")])]),e._v(" "),t("p",[t("strong",[e._v("回流必将引起重绘，重绘不一定会引起回流。")])]),e._v(" "),t("h4",{attrs:{id:"回流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回流"}},[e._v("#")]),e._v(" 回流")]),e._v(" "),t("p",[e._v("当"),t("code",[e._v("Render Tree")]),e._v("中部分或全部元素的尺寸、结构、或某些属性发生改变时，浏览器重新渲染部分或全部文档的过程称为回流。")]),e._v(" "),t("p",[e._v("会导致回流的操作：")]),e._v(" "),t("ul",[t("li",[e._v("页面首次渲染")]),e._v(" "),t("li",[e._v("浏览器窗口大小发生改变")]),e._v(" "),t("li",[e._v("元素尺寸或位置发生改变")]),e._v(" "),t("li",[e._v("元素内容变化（文字数量或图片大小等等）")]),e._v(" "),t("li",[e._v("元素字体大小变化")]),e._v(" "),t("li",[e._v("添加或者删除"),t("strong",[e._v("可见")]),e._v("的"),t("code",[e._v("DOM")]),e._v("元素")]),e._v(" "),t("li",[e._v("激活"),t("code",[e._v("CSS")]),e._v("伪类（例如："),t("code",[e._v(":hover")]),e._v("）")]),e._v(" "),t("li",[e._v("查询某些属性或调用某些方法")])]),e._v(" "),t("p",[e._v("常用的会导致回流的属性和方法：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("clientWidth")]),e._v("、"),t("code",[e._v("clientHeight")]),e._v("、"),t("code",[e._v("clientTop")]),e._v("、"),t("code",[e._v("clientLeft")])]),e._v(" "),t("li",[t("code",[e._v("offsetWidth")]),e._v("、"),t("code",[e._v("offsetHeight")]),e._v("、"),t("code",[e._v("offsetTop")]),e._v("、"),t("code",[e._v("offsetLeft")])]),e._v(" "),t("li",[t("code",[e._v("scrollWidth")]),e._v("、"),t("code",[e._v("scrollHeight")]),e._v("、"),t("code",[e._v("scrollTop")]),e._v("、"),t("code",[e._v("scrollLeft")])]),e._v(" "),t("li",[t("code",[e._v("scrollIntoView()")]),e._v("、"),t("code",[e._v("scrollIntoViewIfNeeded()")])]),e._v(" "),t("li",[t("code",[e._v("getComputedStyle()")])]),e._v(" "),t("li",[t("code",[e._v("getBoundingClientRect()")])]),e._v(" "),t("li",[t("code",[e._v("scrollTo()")])])]),e._v(" "),t("h4",{attrs:{id:"重绘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重绘"}},[e._v("#")]),e._v(" 重绘")]),e._v(" "),t("p",[e._v("当页面中元素样式的改变并不影响它在文档流中的位置时（例如："),t("code",[e._v("color")]),e._v("、"),t("code",[e._v("background-color")]),e._v("、"),t("code",[e._v("visibility")]),e._v("等），浏览器会将新样式赋予给元素并重新绘制它，这个过程称为重绘。")]),e._v(" "),t("h4",{attrs:{id:"性能影响"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能影响"}},[e._v("#")]),e._v(" 性能影响")]),e._v(" "),t("p",[t("strong",[e._v("回流比重绘的代价要更高。")])]),e._v(" "),t("p",[e._v("有时即使仅仅回流一个单一的元素，它的父元素以及任何跟随它的元素也会产生回流。")]),e._v(" "),t("p",[e._v("现代浏览器会对频繁的回流或重绘操作进行优化：")]),e._v(" "),t("p",[e._v("浏览器会维护一个队列，把所有引起回流和重绘的操作放入队列中，如果队列中的任务数量或者时间间隔达到一个阈值的，浏览器就会将队列清空，进行一次批处理，这样可以把多次回流和重绘变成一次。")]),e._v(" "),t("p",[e._v("当你访问以下属性或方法时，浏览器会立刻清空队列：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("clientWidth")]),e._v("、"),t("code",[e._v("clientHeight")]),e._v("、"),t("code",[e._v("clientTop")]),e._v("、"),t("code",[e._v("clientLeft")])]),e._v(" "),t("li",[t("code",[e._v("offsetWidth")]),e._v("、"),t("code",[e._v("offsetHeight")]),e._v("、"),t("code",[e._v("offsetTop")]),e._v("、"),t("code",[e._v("offsetLeft")])]),e._v(" "),t("li",[t("code",[e._v("scrollWidth")]),e._v("、"),t("code",[e._v("scrollHeight")]),e._v("、"),t("code",[e._v("scrollTop")]),e._v("、"),t("code",[e._v("scrollLeft")])]),e._v(" "),t("li",[t("code",[e._v("width")]),e._v("、"),t("code",[e._v("height")])]),e._v(" "),t("li",[t("code",[e._v("getComputedStyle()")])]),e._v(" "),t("li",[t("code",[e._v("getBoundingClientRect()")])])]),e._v(" "),t("p",[e._v("因为队列中可能会有影响到这些属性或方法返回值的操作，即使你希望获取的信息与队列中操作引发的改变无关，浏览器也会强行清空队列，确保你拿到的值是最精确的。")]),e._v(" "),t("h4",{attrs:{id:"如何避免"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何避免"}},[e._v("#")]),e._v(" 如何避免")]),e._v(" "),t("ul",[t("li",[e._v("CSS\n"),t("ul",[t("li",[e._v("避免使用"),t("code",[e._v("table")]),e._v("布局。")]),e._v(" "),t("li",[e._v("尽可能在"),t("code",[e._v("DOM")]),e._v("树的最末端改变"),t("code",[e._v("class")]),e._v("。")]),e._v(" "),t("li",[e._v("避免设置多层内联样式。")]),e._v(" "),t("li",[e._v("将动画效果应用到"),t("code",[e._v("position")]),e._v("属性为"),t("code",[e._v("absolute")]),e._v("或"),t("code",[e._v("fixed")]),e._v("的元素上。")]),e._v(" "),t("li",[e._v("避免使用"),t("code",[e._v("CSS")]),e._v("表达式（例如："),t("code",[e._v("calc()")]),e._v("）。")])])]),e._v(" "),t("li",[e._v("JavaScript\n"),t("ul",[t("li",[e._v("避免频繁操作样式，最好一次性重写"),t("code",[e._v("style")]),e._v("属性，或者将样式列表定义为"),t("code",[e._v("class")]),e._v("并一次性更改"),t("code",[e._v("class")]),e._v("属性。")]),e._v(" "),t("li",[e._v("避免频繁操作"),t("code",[e._v("DOM")]),e._v("，创建一个"),t("code",[e._v("documentFragment")]),e._v("，在它上面应用所有"),t("code",[e._v("DOM")]),e._v("操作，最后再把它添加到文档中。")]),e._v(" "),t("li",[e._v("也可以先为元素设置"),t("code",[e._v("display: none")]),e._v("，操作结束后再把它显示出来。因为在"),t("code",[e._v("display")]),e._v("属性为"),t("code",[e._v("none")]),e._v("的元素上进行的"),t("code",[e._v("DOM")]),e._v("操作不会引发回流和重绘。")]),e._v(" "),t("li",[e._v("避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。")]),e._v(" "),t("li",[e._v("对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。")])])])]),e._v(" "),t("h3",{attrs:{id:"script标签中的async和defer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#script标签中的async和defer"}},[e._v("#")]),e._v(" script标签中的async和defer")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("参考")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://segmentfault.com/q/1010000000640869",target:"_blank",rel:"noopener noreferrer"}},[e._v("defer和async的区别"),t("OutboundLink")],1)])]),e._v(" "),t("ul",[t("li",[t("code",[e._v('<script src="script.js"><\/script>')]),e._v(" "),t("ul",[t("li",[e._v("没有defer和async，浏览器会立即加载并执行指定的脚本，“立即”指的是在渲染该script标签之下的文档元素之前，也就是说不等待后续载入的文档元素，读到就加载并执行。")])])]),e._v(" "),t("li",[t("code",[e._v('<script async src="script.js"><\/script>')]),e._v(" "),t("ul",[t("li",[e._v("有async，加载和渲染后续文档元素的过程将和script.js的加载与执行并行进行（异步）。")])])]),e._v(" "),t("li",[t("code",[e._v('<script defer src="script.js"><\/script>')]),e._v(" "),t("ul",[t("li",[e._v("有defer，加载后续文档元素的过程将和script.js的加载并行进行（异步），但是script.js的执行要在所有元素解析完成之后，DOMContentLoaded事件触发之前完成。")])])])]),e._v(" "),t("img",{attrs:{src:_(354)}}),e._v(" "),t("h3",{attrs:{id:"首屏加载优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首屏加载优化"}},[e._v("#")]),e._v(" 首屏加载优化")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("参考")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://imweb.io/topic/5b6fd3c13cb5a02f33c013bd",target:"_blank",rel:"noopener noreferrer"}},[e._v("网站性能优化实战——从12.67s到1.06s的故事"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("TODO")]),e._v(" "),t("h2",{attrs:{id:"存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储"}},[e._v("#")]),e._v(" 存储")]),e._v(" "),t("h3",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[e._v("#")]),e._v(" cookie")]),e._v(" "),t("h3",{attrs:{id:"sessionstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[e._v("#")]),e._v(" sessionStorage")]),e._v(" "),t("p",[e._v("essionStorage 属性允许你访问一个，对应当前源的 session Storage 对象。它与 localStorage 相似，不同之处在于 localStorage 里面存储的数据没有过期时间设置，而存储在 sessionStorage 里面的数据在页面会话结束时会被清除。")]),e._v(" "),t("ul",[t("li",[e._v("页面会话在浏览器打开期间一直保持，并且重新加载或恢复页面仍会保持原来的页面会话。")]),e._v(" "),t("li",[e._v("在新标签或窗口打开一个页面时会复制顶级浏览会话的上下文作为新会话的上下文，这点和 session cookies 的运行方式不同。")]),e._v(" "),t("li",[e._v("打开多个相同的URL的Tabs页面，会创建各自的sessionStorage。")]),e._v(" "),t("li",[e._v("关闭对应浏览器tab，会清除对应的sessionStorage。")])]),e._v(" "),t("h3",{attrs:{id:"localstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[e._v("#")]),e._v(" localStorage")]),e._v(" "),t("p",[e._v("只读的localStorage 属性允许你访问一个Document 源（origin）的对象 Storage；存储的数据将保存在浏览器会话中。localStorage 类似 sessionStorage，但其区别在于：存储在 localStorage 的数据可以长期保留；而当页面会话结束——也就是说，当页面被关闭时，存储在 sessionStorage 的数据会被清除 。")]),e._v(" "),t("p",[e._v("应注意，无论数据存储在 localStorage 还是 sessionStorage ，它们都特定于页面的协议。")]),e._v(" "),t("p",[e._v("另外，localStorage 中的键值对总是以字符串的形式存储。 (需要注意, 和js对象相比, 键值对总是以字符串的形式存储意味着数值类型会自动转化为字符串类型).")]),e._v(" "),t("h3",{attrs:{id:"indexeddb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb"}},[e._v("#")]),e._v(" IndexedDB")]),e._v(" "),t("p",[e._v("IndexedDB 是一种在用户浏览器中持久存储数据的方法。它允许您不考虑网络可用性，创建具有丰富查询能力的可离线 Web 应用程序。IndexedDB 对于存储大量数据的应用程序（例如借阅库中的 DVD 目录）和不需要持久 Internet 连接的应用程序（例如邮件客户端、待办事项列表或记事本）很有用。")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("IndexedDB 数据库使用 key-value 键值对储存数据.")]),e._v(" values 数据可以是结构非常复杂的对象，key可以是对象自身的属性。你可以对对象的任何属性创建索引（index）以实现快速查询和列举排序。key可以是二进制对象。")]),e._v(" "),t("li",[t("strong",[e._v("IndexedDB 是事务模式的数据库.")]),e._v(" 任何操作都发生在事务(transaction)中。  IndexedDB API提供了索引(indexes)、表(tables)、指针(cursors)等等，但是所有这些必须是依赖于某种事务的。因此，你不能在事务外执行命令或者打开指针。事务(transaction)有生存周期，在生存周期以后使用它会报错。并且，事务(transaction)是自动提交的，不可以手动提交。\n"),t("ul",[t("li",[e._v("当用户在不同的标签页同时打开Web应用的两个实例时，这个事务模型就会非常有用。如果没有事务操作的支持，这两个实例就会互相影响对方的修改。如果你不熟悉数据库的事务模型，请参考数据库事务（维基百科）。 同时参考transaction文章中关于事务的定义部分。")])])]),e._v(" "),t("li",[t("strong",[e._v("The IndexedDB API 基本上是异步的。")]),e._v(" IndexedDB的API不通过return语句返回数据，而是需要你提供一个回调函数来接受数据。执行API时，你不以同步（synchronous）方式对数据库进行“存储”和“读取”操作，而是向数据库发送一个操作“请求”。当操作完成时，数据库会以DOM事件的方式通知你，同时事件的类型会告诉你这个操作是否成功完成。这个过程听起来会有些复杂，但是里面是有明智的原因的。这个和XMLHttpRequest请求是类似的")]),e._v(" "),t("li",[t("strong",[e._v("IndexedDB数据库“请求”无处不在。")]),e._v(" 我们上边提到，数据库“请求”负责接受成功或失败的DOM事件。每一个“请求”都包含onsuccess和onerror事件属性，同时你还对“事件”调用addEventListener()和removeEventListener()。“请求”还包括readyState，result和errorCode属性，用来表示“请求”的状态。result属性尤其神奇，他可以根据“请求”生成的方式变成不同的东西，例如：IDBCursor实例、刚插入数据库的数值对应的键值（key）等。")]),e._v(" "),t("li",[t("strong",[e._v("IndexedDB在结果准备好之后通过DOM事件通知用户。")]),e._v(" DOM事件总是有一个类型（type）属性（在IndexedDB中，该属性通常设置为success或error）。DOM事件还有一个目标（target）属性，用来告诉事件是被谁触发的。通常情况下，目标（target）属性是数据库操作生成的IDBRequest。成功（success）事件不弹出提示并且不能撤销，错误（error）事件会弹出提示且可以撤销。这一点是非常重要的，因为除非错误事件被撤销，否则他们会终止所在的任何事务。")]),e._v(" "),t("li",[t("strong",[e._v("IndexedDB是面向对象的")]),e._v("。indexedDB不是用二维表来表示集合的关系型数据库。这一点非常重要，将影响你设计和建立你的应用程序。\n"),t("ul",[t("li",[e._v("传统的关系型数据库，你需要用到二维表来存储数据集合（每一行代表一个数据，每一列代表一个属性），indexedDB有所不同，它要求你为一种数据创建一个对象仓库(object Store)，只要这种数据是一个JavaScript对象即可。每个对象仓库都有一个索引(index)集合以方便查询和迭代遍历。如果你不熟悉面向对象的数据库管理系统，可以参考维基百科有关对象数据库的内容")])])]),e._v(" "),t("li",[t("strong",[e._v("indexedDB不使用结构化查询语言（SQL）")]),e._v("。它通过索引(index)所产生的指针(cursor)来完成查询操作，从而使你可以迭代遍历到结果集合。如果你不熟悉NoSQL系统，可以参考维基百科相关文章。")]),e._v(" "),t("li",[t("strong",[e._v("IndexedDB遵循同源（same-origin）策略")]),e._v("。 “源”指脚本所在文档URL的域名、应用层协议和端口。每一个“源”都有与其相关联的数据库。在同一个“源”内的所有数据库都有唯一、可区别的名称。")])]),e._v(" "),t("h3",{attrs:{id:"对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对比"}},[e._v("#")]),e._v(" 对比")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("特性")]),e._v(" "),t("th",[e._v("cookie")]),e._v(" "),t("th",[e._v("sessionStorage")]),e._v(" "),t("th",[e._v("localStorage")]),e._v(" "),t("th",[e._v("IndexedDB")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("数据声明周期")]),e._v(" "),t("td",[e._v("可设置过期时间")]),e._v(" "),t("td",[e._v("页面关闭就清理")]),e._v(" "),t("td",[e._v("除非被清理，否则一直存在")]),e._v(" "),t("td",[e._v("除非被清理，否则一直存在")])]),e._v(" "),t("tr",[t("td",[e._v("数据存储大小")]),e._v(" "),t("td",[e._v("4K")]),e._v(" "),t("td",[e._v("5M")]),e._v(" "),t("td",[e._v("5M")]),e._v(" "),t("td",[e._v("∞")])]),e._v(" "),t("tr",[t("td",[e._v("与服务端通信")]),e._v(" "),t("td",[e._v("每次都会携带在 header 中，对于请求性能影响")]),e._v(" "),t("td",[e._v("不参与")]),e._v(" "),t("td",[e._v("不参与")]),e._v(" "),t("td",[e._v("不参与")])])])]),e._v(" "),t("h2",{attrs:{id:"事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[e._v("#")]),e._v(" 事件")]),e._v(" "),t("h3",{attrs:{id:"事件捕获"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件捕获"}},[e._v("#")]),e._v(" 事件捕获")]),e._v(" "),t("h3",{attrs:{id:"事件冒泡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件冒泡"}},[e._v("#")]),e._v(" 事件冒泡")]),e._v(" "),t("h3",{attrs:{id:"addeventlistener"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#addeventlistener"}},[e._v("#")]),e._v(" addEventListener")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("参考")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN EventTarget.addEventListener()"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("code",[e._v("EventTarget.addEventListener()")]),e._v(" 方法将指定的监听器注册到 EventTarget 上，当该对象触发指定的事件时，指定的回调函数就会被执行。 事件目标可以是一个文档上的元素 Element,Document和Window或者任何其他支持事件的对象 (比如 "),t("code",[e._v("XMLHttpRequest")]),e._v(")。")]),e._v(" "),t("p",[e._v("addEventListener()的工作原理是将实现EventListener的函数或对象添加到调用它的EventTarget上的指定事件类型的事件侦听器列表中。")]),e._v(" "),t("h4",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[e._v("#")]),e._v(" 语法")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[e._v("target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("addEventListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\ntarget"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("addEventListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" useCapture"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h4",{attrs:{id:"参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[e._v("#")]),e._v(" 参数")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("type")]),e._v(" "),t("ul",[t("li",[e._v("表示监听事件类型的字符串。")])])]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("ul",[t("li",[e._v("当所监听的事件类型触发时，会接收到一个事件通知（实现了 Event 接口的对象）对象。"),t("code",[e._v("listener")]),e._v(" 必须是一个实现了 "),t("code",[e._v("EventListener")]),e._v(" 接口的对象，或者是一个函数。")])])]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" 可选\n"),t("ul",[t("li",[e._v("一个指定有关 "),t("code",[e._v("listener")]),e._v(" 属性的可选参数对象。可用的选项如下：\n"),t("ul",[t("li",[t("code",[e._v("capture")]),e._v(":  "),t("code",[e._v("Boolean")]),e._v("，表示 "),t("code",[e._v("listener")]),e._v(" 会在该类型的事件捕获阶段传播到该 "),t("code",[e._v("EventTarget")]),e._v(" 时触发。")]),e._v(" "),t("li",[t("code",[e._v("once")]),e._v(":  "),t("code",[e._v("Boolean")]),e._v("，表示 "),t("code",[e._v("listener")]),e._v(" 在添加之后最多只调用一次。如果是 "),t("code",[e._v("true")]),e._v("， "),t("code",[e._v("listener")]),e._v(" 会在其被调用之后自动移除。")]),e._v(" "),t("li",[t("code",[e._v("passive")]),e._v(": "),t("code",[e._v("Boolean")]),e._v("，设置为"),t("code",[e._v("true")]),e._v("时，表示 "),t("code",[e._v("listener")]),e._v(" 永远不会调用 "),t("code",[e._v("preventDefault()")]),e._v("。如果 "),t("code",[e._v("listener")]),e._v(" 仍然调用了这个函数，客户端将会忽略它并抛出一个控制台警告。")])])])])]),e._v(" "),t("li",[t("code",[e._v("useCapture")]),e._v("  可选\n"),t("ul",[t("li",[t("code",[e._v("Boolean")]),e._v("，在DOM树中，注册了"),t("code",[e._v("listener")]),e._v("的元素， 是否要先于它下面的EventTarget，调用该"),t("code",[e._v("listener")]),e._v("。 当"),t("code",[e._v("useCapture")]),e._v("(设为"),t("code",[e._v("true")]),e._v(") 时，沿着DOM树向上冒泡的事件，不会触发listener。当一个元素嵌套了另一个元素，并且两个元素都对同一事件注册了一个处理函数时，所发生的事件冒泡和事件捕获是两种不同的事件传播方式。事件传播模式决定了元素以哪个顺序接收事件。 如果没有指定， "),t("code",[e._v("useCapture")]),e._v(" 默认为 "),t("code",[e._v("false")]),e._v(" 。")])])])]),e._v(" "),t("h4",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[e._v("#")]),e._v(" 优点")]),e._v(" "),t("ul",[t("li",[e._v("它允许给一个事件注册多个监听器。 特别是在使用AJAX库，JavaScript模块，或其他需要第三方库/插件的代码。")]),e._v(" "),t("li",[e._v("它提供了一种更精细的手段控制 listener 的触发阶段。（即可以选择捕获或者冒泡）。")]),e._v(" "),t("li",[e._v("它对任何 DOM 元素都是有效的，而不仅仅只对 HTML 元素有效。")])]),e._v(" "),t("h3",{attrs:{id:"事件代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件代理"}},[e._v("#")]),e._v(" 事件代理")]),e._v(" "),t("h4",{attrs:{id:"优点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点-2"}},[e._v("#")]),e._v(" 优点")]),e._v(" "),t("ul",[t("li",[e._v("节省内存")]),e._v(" "),t("li",[e._v("不需要给子节点注销事件")])])])}),[],!1,null,null,null);v.default=o.exports}}]);