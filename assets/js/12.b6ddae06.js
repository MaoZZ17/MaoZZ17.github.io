(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{383:function(s,t,a){s.exports=a.p+"assets/img/executionStack.b04bb205.png"},414:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"javascript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[s._v("#")]),s._v(" JavaScript")]),s._v(" "),n("h2",{attrs:{id:"数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("参考")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures",target:"_blank",rel:"noopener noreferrer"}},[s._v("MDN JavaScript 数据类型和数据结构"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("《JavaScript 高级程序设计》")])]),s._v(" "),n("p",[s._v("7种原始数据类型： "),n("a",{attrs:{href:"#undefined"}},[n("code",[s._v("Undefined")])]),s._v("、"),n("a",{attrs:{href:"#null"}},[n("code",[s._v("Null")])]),s._v("、"),n("a",{attrs:{href:"#boolean"}},[n("code",[s._v("Boolean")])]),s._v("、"),n("a",{attrs:{href:"#number"}},[n("code",[s._v("Number")])]),s._v("、"),n("a",{attrs:{href:"#string"}},[n("code",[s._v("String")])]),s._v("、"),n("a",{attrs:{href:"#symbol"}},[n("code",[s._v("Symbol")])]),s._v("(ES6新增)和"),n("a",{attrs:{href:"#bigint"}},[n("code",[s._v("BigInt")])]),s._v("(ES10新增)")]),s._v(" "),n("p",[s._v("1种引用数据类型： "),n("a",{attrs:{href:"#object"}},[n("code",[s._v("Object")])])]),s._v(" "),n("h3",{attrs:{id:"undefined"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[s._v("#")]),s._v(" Undefined")]),s._v(" "),n("p",[n("code",[s._v("Undefined")]),s._v("类型只有一个值"),n("code",[s._v("undefined")]),s._v("，一个变量在声明后未初始化时，这个变量的值就是"),n("code",[s._v("undefined")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),n("p",[s._v('即便未处理化的变量会自动被赋予undefined值，但显示地初始化变量依然是明智的选择。如果能够做到这一点，那么当typeof操作符返回"undefined"值时，我们就知道被检测的变量还没有被声明，而不是尚未初始化。')])]),s._v(" "),n("h3",{attrs:{id:"null"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[s._v("#")]),s._v(" Null")]),s._v(" "),n("p",[n("code",[s._v("Null")]),s._v(" 类型有一个值 "),n("code",[s._v("null")]),s._v("。"),n("code",[s._v("null")]),s._v(" 值表示一个空对象指针，使用 "),n("code",[s._v("typeof")]),s._v(" 操作符检测 "),n("code",[s._v("null")]),s._v(" 值时会返回"),n("code",[s._v("”object“")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "object"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"boolean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[s._v("#")]),s._v(" Boolean")]),s._v(" "),n("p",[n("code",[s._v("Boolean")]),s._v("类型有两个值 "),n("code",[s._v("true")]),s._v("和"),n("code",[s._v("false")]),s._v("。JavaScript中所有类型的值都有与这两个值等价的值，可以使用Boolean()将其转换。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 转换为 false 的值")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bNoParam "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bZero "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bNaN "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bNull "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bUndefined "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bEmptyString "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bfalse "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 转换为 true 的值")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" btrue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" btrueString "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'true'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bfalseString "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'false'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bSpaceString "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bArrayProto "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bObjProto "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"number"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[s._v("#")]),s._v(" Number")]),s._v(" "),n("p",[n("code",[s._v("Number")]),s._v("类型为双精度IEEE 754 64位浮点类型。除了表示浮点数，"),n("code",[s._v("Number")]),s._v("类型还有三个符号值： "),n("code",[s._v("+Infinity")]),s._v("，"),n("code",[s._v("-Infinity")]),s._v("，"),n("code",[s._v("NaN")]),s._v("（Not a Number）。")]),s._v(" "),n("p",[s._v("可以使用"),n("code",[s._v("Number.MAX_VALUE")]),s._v(" 和 "),n("code",[s._v("Number.MIN_VALUE")]),s._v("来过的"),n("code",[s._v("±Infinity")]),s._v("内的最大最小可用值。")]),s._v(" "),n("p",[s._v("还可以使用"),n("code",[s._v("Number.isSafeInteger()")]),s._v(" 以及 "),n("code",[s._v("Number.MAX_SAFE_INTEGER")]),s._v(" 和 "),n("code",[s._v("Number.MIN_SAFE_INTEGER")]),s._v("确认数字是否在双精度浮点数范围内。超出此范围，JavaScript中的整数将不再安全，它将成为该值的双精度浮点近似值。")]),s._v(" "),n("p",[n("code",[s._v("Number.EPSILON")]),s._v(" 表示 "),n("code",[s._v("1")]),s._v(" 与"),n("code",[s._v("Number")]),s._v("可表示的大于 "),n("code",[s._v("1")]),s._v(" 的最小的浮点数之间的差值。"),n("code",[s._v("EPSILON")]),s._v(" 属性的值接近于 2.2204460492503130808472633361816E-16，或者 2"),n("sup",[s._v("-52")]),s._v("。")]),s._v(" "),n("p",[n("code",[s._v("Number")]),s._v("支持八进制("),n("code",[s._v("0")]),s._v("打头)和十六进制("),n("code",[s._v("0x")]),s._v("打头)，也支持科学计数法。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num10 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//17")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num8 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("021")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//021 等于十进制的17")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num16 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x11")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0x17 等于十进制的17")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" numS "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.7E1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1.7E1 等于十进制的17")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"string"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[s._v("#")]),s._v(" String")]),s._v(" "),n("p",[n("code",[s._v("String")]),s._v("类型用于表示文本数据。它是一组16位无符号整数值的“元素”。字符串中的每个元素在字符串中都占有一个位置。第一个元素在索引"),n("code",[s._v("0")]),s._v("处，第二个元素在索引"),n("code",[s._v("1")]),s._v("处，依此类推。字符串的长度是其中的元素数。可以由双引号(\")和单引号(')表示。")]),s._v(" "),n("p",[s._v("JavaScript字符串是不可变的。 这意味着一旦创建了字符串，就无法对其进行修改。但是仍然可以基于对原始字符串的操作来创建另一个字符串。")]),s._v(" "),n("h4",{attrs:{id:"字符字面量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符字面量"}},[s._v("#")]),s._v(" 字符字面量")]),s._v(" "),n("p",[n("code",[s._v("String")]),s._v("数据类型包含一些特殊的字符字面量，也叫转义序列，用于表示非打印字符，或者具有其他用途的字符。这些字符字面量如下表所示：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("字面量")]),s._v(" "),n("th",[s._v("含义")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("\\n")]),s._v(" "),n("td",[s._v("换行")])]),s._v(" "),n("tr",[n("td",[s._v("\\t")]),s._v(" "),n("td",[s._v("制表")])]),s._v(" "),n("tr",[n("td",[s._v("\\b")]),s._v(" "),n("td",[s._v("退格")])]),s._v(" "),n("tr",[n("td",[s._v("\\r")]),s._v(" "),n("td",[s._v("回车")])]),s._v(" "),n("tr",[n("td",[s._v("\\f")]),s._v(" "),n("td",[s._v("进纸")])]),s._v(" "),n("tr",[n("td",[s._v("\\\\")]),s._v(" "),n("td",[s._v("斜杠")])]),s._v(" "),n("tr",[n("td",[s._v("\\'")]),s._v(" "),n("td",[s._v("单引号")])]),s._v(" "),n("tr",[n("td",[s._v('\\"')]),s._v(" "),n("td",[s._v("双引号")])]),s._v(" "),n("tr",[n("td",[s._v("\\xnn")]),s._v(" "),n("td",[s._v("以十六进制代码nn表示的一个字符")])]),s._v(" "),n("tr",[n("td",[s._v("\\unnnn")]),s._v(" "),n("td",[s._v("以十六进制代码nnnn表示的一个Unicode字符")])])])]),s._v(" "),n("h3",{attrs:{id:"symbol"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[s._v("#")]),s._v(" Symbol")]),s._v(" "),n("p",[n("code",[s._v("Symbol()")]),s._v("函数会返回"),n("code",[s._v("symbol")]),s._v("类型的值，该类型具有静态属性和静态方法。它的静态属性会暴露几个内建的成员对象；它的静态方法会暴露全局的"),n("code",[s._v("symbol")]),s._v("注册，且类似于内建对象类，但作为构造函数来说它并不完整，因为它不支持语法："),n("code",[s._v("new Symbol()")]),s._v("。\n每个从"),n("code",[s._v("Symbol()")]),s._v("返回的"),n("code",[s._v("symbol")]),s._v("值都是唯一的。一个"),n("code",[s._v("symbol")]),s._v("值能作为对象属性的标识符；这是该数据类型仅有的目的。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sym1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sym1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Symbol(a)")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sym1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//"symbol"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sym2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sym1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" sym2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//false")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sym1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v("\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sym2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//{ [Symbol(a)]: '1', [Symbol(a)]: '2' }")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sym1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//undefined")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sym1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//"1"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//无输出")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("keys")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//[]")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getOwnPropertyNames")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//[]")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getOwnPropertySymbols")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//[ Symbol(a), Symbol(a) ]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),n("p",[n("code",[s._v("Symbol")]),s._v("作为属性值时，该属性是公有属性不是私有属性，可以在类的外部访问。但是不会出现在 "),n("code",[s._v("for...in")]),s._v("、"),n("code",[s._v("for...of")]),s._v("的循环中，也不会被"),n("code",[s._v("Object.keys()")]),s._v("、"),n("code",[s._v("Object.getOwnPropertyNames()")]),s._v("返回。如果要读取到一个对象的"),n("code",[s._v("Symbol")]),s._v("属性，可以通过"),n("code",[s._v("Object.getOwnPropertySymbols()")]),s._v("读取。")])]),s._v(" "),n("h4",{attrs:{id:"symbol-for"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#symbol-for"}},[s._v("#")]),s._v(" Symbol.for()")]),s._v(" "),n("p",[n("code",[s._v("Symbol.for(key)")]),s._v(" 方法会根据给定的键 "),n("code",[s._v("key")]),s._v("，来从运行时的 "),n("code",[s._v("symbol")]),s._v(" 注册表中找到对应的 "),n("code",[s._v("symbol")]),s._v("，如果找到了，则返回它，否则，新建一个与该键关联的 "),n("code",[s._v("symbol")]),s._v("，并放入全局 "),n("code",[s._v("symbol")]),s._v(" 注册表中。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("Symbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 创建一个 symbol 并放入 symbol 注册表中，键为 "foo"')]),s._v("\nSymbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 从 symbol 注册表中读取键为"foo"的 symbol')]),s._v("\n\nSymbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" Symbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true，证明了上面说的")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false，Symbol() 函数每次都会返回新的一个 symbol")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" sym "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Symbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mario"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsym"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "Symbol(mario)"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//mario 既是该 symbol 在 symbol 注册表中的键名，又是该 symbol 自身的描述字符串")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),n("p",[s._v("为了防止冲突，最好给你要放入 "),n("code",[s._v("symbol")]),s._v(" 注册表中的 "),n("code",[s._v("symbol")]),s._v(" 带上键前缀。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("Symbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my.foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nSymbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my.bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("h4",{attrs:{id:"symbol-keyfor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#symbol-keyfor"}},[s._v("#")]),s._v(" Symbol.keyFor()")]),s._v(" "),n("p",[n("code",[s._v("Symbol.keyFor(sym)")]),s._v(" 方法用来获取 "),n("code",[s._v("symbol")]),s._v(" 注册表中与某个 "),n("code",[s._v("symbol")]),s._v(" 关联的键。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 创建一个 symbol 并放入 Symbol 注册表，key 为 "foo"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" globalSym "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Symbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \nSymbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("keyFor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("globalSym"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "foo"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个 symbol，但不放入 symbol 注册表中")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" localSym "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \nSymbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("keyFor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("localSym"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined，所以是找不到 key 的")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// well-known symbol 们并不在 symbol 注册表中")]),s._v("\nSymbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("keyFor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Symbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("iterator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"bigint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bigint"}},[s._v("#")]),s._v(" BigInt")]),s._v(" "),n("p",[n("code",[s._v("BigInt")]),s._v("类型是 JavaScript 中的一个基础的数值类型，可以用任意精度表示整数。使用 "),n("code",[s._v("BigInt")]),s._v("，可以安全地存储和操作大整数，甚至可以超过数字的安全整数限制。"),n("code",[s._v("BigInt")]),s._v("是通过在整数末尾附加 "),n("code",[s._v("n")]),s._v(" 或调用构造函数来创建的。")]),s._v(" "),n("p",[s._v("通过使用常量"),n("code",[s._v("Number.MAX_SAFE_INTEGER")]),s._v("，可以获得可以用数字递增的最安全的值。通过引入 "),n("code",[s._v("BigInt")]),s._v("，您可以操作超过"),n("code",[s._v("Number.MAX_SAFE_INTEGER")]),s._v("的数字。可以在下面的示例中观察到这一点，其中递增"),n("code",[s._v("Number.MAX_SAFE_INTEGER")]),s._v("会返回预期的结果:")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("53n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9007199254740992n")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9007199254740993n")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("可以对"),n("code",[s._v("BigInt")]),s._v("使用运算符"),n("code",[s._v("+")]),s._v("、"),n("code",[s._v("*")]),s._v("、"),n("code",[s._v("-")]),s._v("、"),n("code",[s._v("**")]),s._v("和"),n("code",[s._v("%")]),s._v("，就像对数字一样。"),n("code",[s._v("BigInt")]),s._v(" 严格来说并不等于一个数字，但它是松散的。")]),s._v(" "),n("p",[s._v("在将"),n("code",[s._v("BigInt")]),s._v("转换为"),n("code",[s._v("Boolean")]),s._v("时，它的行为类似于一个数字："),n("code",[s._v("if")]),s._v("、"),n("code",[s._v("||")]),s._v("、"),n("code",[s._v("&&")]),s._v("、"),n("code",[s._v("Boolean")]),s._v(" 和"),n("code",[s._v("!")]),s._v("。")]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("BigInt")]),s._v("不能与数字互换操作。否则，将抛出"),n("code",[s._v("TypeError")]),s._v("。")])]),s._v(" "),n("h3",{attrs:{id:"object"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[s._v("#")]),s._v(" Object")]),s._v(" "),n("p",[s._v("JavaScript中的对象其实就是一组数据和功能的集合。对象可以通过执行"),n("code",[s._v("new")]),s._v("操作符后跟要创建的对象类型的名称来创建。而创建"),n("code",[s._v("Object")]),s._v("类型的实例并为其添加属性和方法，就可以创建自定义对象。属性的值可以是任意类型，包括具有复杂数据结构的对象。属性使用键来标识，它的键值可以是一个字符串或者符号值（"),n("code",[s._v("Symbol")]),s._v("）。")]),s._v(" "),n("p",[n("code",[s._v("Object")]),s._v("的每个实例都具有下列属性和方法：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("constructor")]),s._v(": 保存着用于创建当前对象的函数。")]),s._v(" "),n("li",[n("code",[s._v("hasOwnProperty(propertyName)")]),s._v(": 用于检查给定的属性在当前对象实例中是否存在。其中作为参数的属性名("),n("code",[s._v("propertyName")]),s._v(")必须以字符串形式指定。")]),s._v(" "),n("li",[n("code",[s._v("isPrototypeOf(object)")]),s._v(": 用于检查传入的对象是否是当前对象的原型。")]),s._v(" "),n("li",[n("code",[s._v("propertyIsEnumerable")]),s._v(": 用于检查给定的属性是否能够使用"),n("code",[s._v("for-in")]),s._v("语句来枚举。其中作为参数的属性名("),n("code",[s._v("propertyName")]),s._v(")必须以字符串形式指定。")]),s._v(" "),n("li",[n("code",[s._v("toLocaleString()")]),s._v(": 返回对象的字符串表示，该字符串与执行环境的地区对应。")]),s._v(" "),n("li",[n("code",[s._v("toString()")]),s._v(": 返回对象的字符串表示。")]),s._v(" "),n("li",[n("code",[s._v("valueOf()")]),s._v(": 返回对象的字符串、数值或布尔值表示。通常与"),n("code",[s._v("toString()")]),s._v("方法的返回值相同。")])]),s._v(" "),n("p",[n("code",[s._v("Object")]),s._v("是所有对象的基础，因此所有对象都具有这些基本的属性和方法。")]),s._v(" "),n("h3",{attrs:{id:"数据类型间的转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型间的转换"}},[s._v("#")]),s._v(" 数据类型间的转换")]),s._v(" "),n("ul",[n("li",[s._v("转换为布尔值（调用"),n("code",[s._v("Boolean()")]),s._v("方法和"),n("code",[s._v("！！")]),s._v("(双非)运算符）")]),s._v(" "),n("li",[s._v("转换为数字（调用"),n("code",[s._v("Number()")]),s._v("、"),n("code",[s._v("parseInt()")]),s._v("和"),n("code",[s._v("parseFloat()")]),s._v("方法）")]),s._v(" "),n("li",[s._v("转换为字符串（调用"),n("code",[s._v(".toString()")]),s._v("或者"),n("code",[s._v("String()")]),s._v("方法）")])]),s._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),n("p",[n("code",[s._v("null")]),s._v(" 和 "),n("code",[s._v("undefined")]),s._v(" 没有 "),n("code",[s._v(".toString()")]),s._v(" 方法")])]),s._v(" "),n("h3",{attrs:{id:"数据类型的存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型的存储"}},[s._v("#")]),s._v(" 数据类型的存储")]),s._v(" "),n("p",[s._v("原始数据类型：直接存储在栈（stack）中，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储。")]),s._v(" "),n("p",[s._v("引用数据类型：同时存储在栈（stack）和堆（heap）中，占据空间大、大小不固定。引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。")]),s._v(" "),n("h2",{attrs:{id:"标准内置对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#标准内置对象"}},[s._v("#")]),s._v(" 标准内置对象")]),s._v(" "),n("h3",{attrs:{id:"值属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#值属性"}},[s._v("#")]),s._v(" 值属性")]),s._v(" "),n("h3",{attrs:{id:"函数属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数属性"}},[s._v("#")]),s._v(" 函数属性")]),s._v(" "),n("h3",{attrs:{id:"基本对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本对象"}},[s._v("#")]),s._v(" 基本对象")]),s._v(" "),n("h3",{attrs:{id:"数字和日期对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数字和日期对象"}},[s._v("#")]),s._v(" 数字和日期对象")]),s._v(" "),n("h3",{attrs:{id:"bigint-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bigint-2"}},[s._v("#")]),s._v(" BigInt")]),s._v(" "),n("p",[n("code",[s._v("BigInt")]),s._v(" 是一种内置对象，它提供了一种方法来表示大于 2"),n("sup",[s._v("53")]),s._v(" - 1 的整数。这原本是"),n("code",[s._v("Javascript")]),s._v("中可以用 "),n("code",[s._v("Number")]),s._v(" 表示的最大数字。"),n("code",[s._v("BigInt")]),s._v(" 可以表示任意大的整数。")]),s._v(" "),n("p",[s._v("可以用在一个整数字面量后面加 "),n("code",[s._v("n")]),s._v(" 的方式定义一个 "),n("code",[s._v("BigInt")]),s._v(" ，如："),n("code",[s._v("10n")]),s._v("，或者调用函数"),n("code",[s._v("BigInt()")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" theBiggestInt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9007199254740991n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" alsoHuge "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("BigInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9007199254740991")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 9007199254740991n")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" hugeString "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("BigInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"9007199254740991"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 9007199254740991n")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" hugeHex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("BigInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0x1fffffffffffff"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 9007199254740991n")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" hugeBin "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("BigInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0b11111111111111111111111111111111111111111111111111111"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 9007199254740991n")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("它在某些方面类似于 "),n("code",[s._v("Number")]),s._v(" ，但是也有几个关键的不同点：不能用于 "),n("code",[s._v("Math")]),s._v(" 对象中的方法；不能和任何 "),n("code",[s._v("Number")]),s._v(" 实例混合运算，两者必须转换成同一种类型。在两种类型来回转换时要小心，因为 "),n("code",[s._v("BigInt")]),s._v(" 变量在转换成 "),n("code",[s._v("Number")]),s._v(" 变量时可能会丢失精度。")]),s._v(" "),n("p",[s._v("以下操作符可以和 "),n("code",[s._v("BigInt")]),s._v(" 一起使用： "),n("code",[s._v("+")]),s._v("、"),n("code",[s._v("*")]),s._v("、"),n("code",[s._v("-")]),s._v("、"),n("code",[s._v("**")]),s._v("、"),n("code",[s._v("%")]),s._v(" 。除 "),n("code",[s._v(">>>")]),s._v(" （无符号右移）之外的 位操作 也可以支持。因为 "),n("code",[s._v("BigInt")]),s._v(" 都是有符号的， "),n("code",[s._v(">>>")]),s._v(" （无符号右移）不能用于 "),n("code",[s._v("BigInt")]),s._v("。")]),s._v(" "),n("p",[s._v("BigInt 和 Number 不是严格相等的，但是宽松相等的。且可以进行比较。两者也可以混在一个数组内并排序。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" mixed "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//[4n, 6, -12n, 10, 4, 0, 0n]")]),s._v("\n\nmixed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//[-12n, 0, 0n, 10, 4n, 4, 6]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h4",{attrs:{id:"bigint-asintn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bigint-asintn"}},[s._v("#")]),s._v(" BigInt.asIntN()")]),s._v(" "),n("p",[n("code",[s._v("BigInt.asIntN(width, bigint)")]),s._v("静态方法将 "),n("code",[s._v("BigInt")]),s._v(" 值转换为一个 -2"),n("sup",[s._v("width-1")]),s._v(" 与 2"),n("sup",[s._v("width-1")]),s._v("-1 之间的有符号整数。")]),s._v(" "),n("p",[n("code",[s._v("BigInt.asIntN()")]),s._v(" 方法对于保持在64位(64-bit)算数范围内非常有用。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" max "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nBigInt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("asIntN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 9223372036854775807n")]),s._v("\n\nBigInt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("asIntN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" max "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -9223372036854775808n  ")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"bigint-asuintn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bigint-asuintn"}},[s._v("#")]),s._v(" BigInt.asUintN()")]),s._v(" "),n("p",[n("code",[s._v("BigInt.asUintN(width, bigint)")]),s._v("将 "),n("code",[s._v("BigInt")]),s._v(" 转换为一个 0 和 2"),n("sup",[s._v("width")]),s._v("-1 之间的无符号整数。")]),s._v(" "),n("p",[n("code",[s._v("BigInt.asUintN()")]),s._v(" 方法对于保持在64位(64-bit)算数范围内非常有用。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" max "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64n")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nBigInt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("asUintN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 18446744073709551615n")]),s._v("\n\nBigInt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("asUintN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" max "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0n")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"执行上下文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[s._v("#")]),s._v(" 执行上下文")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("参考")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.im/post/5ba32171f265da0ab719a6d7",target:"_blank",rel:"noopener noreferrer"}},[s._v("[译] 理解 JavaScript 中的执行上下文和执行栈"),n("OutboundLink")],1)])]),s._v(" "),n("p",[s._v("执行上下文是评估和执行 JavaScript 代码的环境的抽象概念。每当 Javascript 代码在运行的时候，它都是在执行上下文中运行。")]),s._v(" "),n("h3",{attrs:{id:"执行上下文的类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文的类型"}},[s._v("#")]),s._v(" 执行上下文的类型")]),s._v(" "),n("p",[s._v("JavaScript 中有三种执行上下文类型。")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("全局执行上下文")]),s._v("：这是默认或者说基础的上下文，任何不在函数内部的代码都在全局上下文中。它会执行两件事：创建一个全局的 "),n("code",[s._v("window")]),s._v(" 对象（浏览器的情况下），并且设置 "),n("code",[s._v("this")]),s._v(" 的值等于这个全局对象。一个程序中只会有一个全局执行上下文。")]),s._v(" "),n("li",[n("strong",[s._v("函数执行上下文")]),s._v("：每当一个函数被调用时, 都会为该函数创建一个新的上下文。每个函数都有它自己的执行上下文，不过是在函数被调用时创建的。函数上下文可以有任意多个。每当一个新的执行上下文被创建，它会按定义的顺序执行一系列步骤。")]),s._v(" "),n("li",[n("strong",[s._v("Eval 函数执行上下文")]),s._v("：执行在 "),n("code",[s._v("eval")]),s._v(" 函数内部的代码也会有它属于自己的执行上下文。")])]),s._v(" "),n("h3",{attrs:{id:"执行栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行栈"}},[s._v("#")]),s._v(" 执行栈")]),s._v(" "),n("p",[s._v("执行栈是一种拥有后进先出数据结构的栈，被用来存储代码运行时创建的所有执行上下文。")]),s._v(" "),n("p",[s._v("当 JavaScript 引擎第一次遇到你的脚本时，它会创建一个全局的执行上下文并且压入当前执行栈。每当引擎遇到一个函数调用，它会为该函数创建一个新的执行上下文并压入栈的顶部。")]),s._v(" "),n("p",[s._v("引擎会执行那些执行上下文位于栈顶的函数。当该函数执行结束时，执行上下文从栈中弹出，控制流程到达当前栈中的下一个上下文。")]),s._v(" "),n("p",[s._v("以下面的代码为例：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" title "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'执行栈'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a函数里1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a函数里2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b函数里'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'全局执行上下文'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("执行栈如下图所示：\n"),n("img",{attrs:{src:a(383)}})]),s._v(" "),n("h3",{attrs:{id:"创建执行上下文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建执行上下文"}},[s._v("#")]),s._v(" 创建执行上下文")]),s._v(" "),n("p",[s._v("创建执行上下文有两个阶段： "),n("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E9%98%B6%E6%AE%B5"}},[s._v("创建阶段")]),s._v("和"),n("a",{attrs:{href:"#%E6%89%A7%E8%A1%8C%E9%98%B6%E6%AE%B5"}},[s._v("执行阶段")])]),s._v(" "),n("h4",{attrs:{id:"创建阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建阶段"}},[s._v("#")]),s._v(" 创建阶段")]),s._v(" "),n("p",[s._v("在创建阶段会发生三件事：")]),s._v(" "),n("ol",[n("li",[n("code",[s._v("this")]),s._v(" 值的决定，即我们所熟知的 "),n("a",{attrs:{href:"#this-%E7%BB%91%E5%AE%9A"}},[s._v("This 绑定")]),s._v("。")]),s._v(" "),n("li",[s._v("创建 "),n("a",{attrs:{href:"#%E8%AF%8D%E6%B3%95%E7%8E%AF%E5%A2%83"}},[s._v("词法环境")]),s._v(" 组件。")]),s._v(" "),n("li",[s._v("创建 "),n("a",{attrs:{href:"#%E5%8F%98%E9%87%8F%E7%8E%AF%E5%A2%83"}},[s._v("变量环境")]),s._v(" 组件。")])]),s._v(" "),n("h5",{attrs:{id:"this-绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#this-绑定"}},[s._v("#")]),s._v(" This 绑定")]),s._v(" "),n("p",[s._v("在全局执行上下文中，"),n("code",[s._v("this")]),s._v(" 的值指向全局对象。")]),s._v(" "),n("p",[s._v("在函数执行上下文中，"),n("code",[s._v("this")]),s._v(" 的值取决于该函数是如何被调用的。如果它被一个引用对象调用，那么 "),n("code",[s._v("this")]),s._v(" 会被设置成那个对象，否则 "),n("code",[s._v("this")]),s._v(" 的值被设置为全局对象或者 "),n("code",[s._v("undefined")]),s._v("（在严格模式下）。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" foo "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("baz")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nfoo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("baz")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'this' 引用 'foo', 因为 'baz' 被对象 'foo' 调用")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bar "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("baz"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'this' 指向全局 window 对象，因没有指定引用对象")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h5",{attrs:{id:"词法环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#词法环境"}},[s._v("#")]),s._v(" 词法环境")]),s._v(" "),n("p",[s._v("词法环境是一种规范类型，基于 "),n("code",[s._v("ECMAScript")]),s._v(" 代码的词法嵌套结构来定义标识符和具体变量和函数的关联。简单来说词法环境是一种持有标识符—变量映射的结构。")]),s._v(" "),n("p",[s._v("一个词法环境由环境记录器和一个可能的引用外部词法环境的空值组成。")]),s._v(" "),n("ul",[n("li",[s._v("环境记录器是存储变量和函数声明的实际位置。")]),s._v(" "),n("li",[s._v("外部环境的引用意味着它可以访问其父级词法环境（作用域）。")])]),s._v(" "),n("p",[n("strong",[s._v("词法环境")]),s._v(" 有两种类型：")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("全局环境")]),s._v("（在全局执行上下文中）是没有外部环境引用的词法环境。全局环境的外部环境引用是 "),n("code",[s._v("null")]),s._v("。它拥有内建的 Object/Array/等、在环境记录器内的原型函数（关联全局对象，比如 window 对象）还有任何用户定义的全局变量，并且 "),n("code",[s._v("this")]),s._v(" 的值指向全局对象。")]),s._v(" "),n("li",[s._v("在 "),n("strong",[s._v("函数环境")]),s._v(" 中，函数内部用户定义的变量存储在环境记录器中。并且引用的外部环境可能是全局环境，或者任何包含此内部函数的外部函数。")])]),s._v(" "),n("h5",{attrs:{id:"变量环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量环境"}},[s._v("#")]),s._v(" 变量环境")]),s._v(" "),n("p",[s._v("变量环境同样是一个词法环境，其环境记录器持有变量声明语句在执行上下文中创建的绑定关系。")]),s._v(" "),n("p",[s._v("在 "),n("code",[s._v("ES6")]),s._v(" 中，词法环境组件和变量环境的一个不同就是前者被用来存储函数声明和变量（"),n("code",[s._v("let")]),s._v(" 和 "),n("code",[s._v("const")]),s._v("）绑定，而后者只用来存储 "),n("code",[s._v("var")]),s._v(" 变量绑定。")]),s._v(" "),n("p",[s._v("在创建阶段时，引擎检查代码找出变量和函数声明，虽然函数声明完全存储在环境中，但是变量最初设置为 "),n("code",[s._v("undefined")]),s._v("（"),n("code",[s._v("var")]),s._v(" 情况下），或者未初始化（"),n("code",[s._v("let")]),s._v(" 和 "),n("code",[s._v("const")]),s._v(" 情况下）。这就是可以在声明之前访问 "),n("code",[s._v("var")]),s._v(" 定义的变量（虽然是 "),n("code",[s._v("undefined")]),s._v("），但是在声明之前访问 "),n("code",[s._v("let")]),s._v(" 和 "),n("code",[s._v("const")]),s._v(" 的变量会得到一个引用错误的原因。")]),s._v(" "),n("h4",{attrs:{id:"执行阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行阶段"}},[s._v("#")]),s._v(" 执行阶段")]),s._v(" "),n("p",[s._v("在执行阶段，JavaScript 会完成对所有这些变量的分配，最后执行代码。")]),s._v(" "),n("p",[s._v("如果 JavaScript 引擎不能在源码中声明的实际位置找到 let 变量的值，它会被赋值为 undefined。")]),s._v(" "),n("h2",{attrs:{id:"作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[s._v("#")]),s._v(" 作用域")]),s._v(" "),n("p",[s._v("全局作用域、函数作用域和块级作用域")]),s._v(" "),n("h3",{attrs:{id:"变量的作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量的作用域"}},[s._v("#")]),s._v(" 变量的作用域")]),s._v(" "),n("ul",[n("li",[s._v("var\n"),n("ul",[n("li",[s._v("声明一个变量，可选初始化一个值。")])])]),s._v(" "),n("li",[s._v("let\n"),n("ul",[n("li",[s._v("声明一个块作用域的局部变量，可选初始化一个值。")])])]),s._v(" "),n("li",[s._v("const\n"),n("ul",[n("li",[s._v("声明一个块作用域的只读常量。")]),s._v(" "),n("li",[s._v("const声明创建一个值的只读引用。但这并不意味着它所持有的值是不可变的，只是变量标识符不能重新分配。\n在函数之外声明的变量，叫做全局变量，因为它可被当前文档中的任何其他代码所访问。在函数内部声明的变量，叫做局部变量，因为它只能在当前函数的内部访问。")])])])]),s._v(" "),n("h3",{attrs:{id:"作用域链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[s._v("#")]),s._v(" 作用域链")]),s._v(" "),n("p",[s._v("当查找变量的时候，会先从当前上下文的变量对象中查找，如果没有找到，就会从父级(词法层面上的父级)执行上下文的变量对象中查找，一直找到全局上下文的变量对象，也就是全局对象。这样由多个执行上下文的变量对象构成的链表就叫做作用域链。")]),s._v(" "),n("h2",{attrs:{id:"闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[s._v("#")]),s._v(" 闭包")])])}),[],!1,null,null,null);t.default=e.exports}}]);